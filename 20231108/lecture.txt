자바스크립트 코드 작성 시 유의사항
1. 대소문자 주의
대소문자가 다르면 다른 객체로 취급
var a, var A => 서로 다른 것

2. 세미콜론(;) 작성하기
=> 한 문장의 끝
=> 자바스크립트는 굳이 안써도 되지만, 코드 간의 구분이 좀 더 쉽게하기 위해서 쓰면 좋음

3. 따옴표
document.write('안녕하세요') 처럼
' ' => 문자열의 구분을 위해서 
"를 쓰고 싶으면 '로 문자열의 구분
'를 쓰고 싶으면 "로 문자열의 구분
\(백슬래시)를 사용하여 따옴표를 사용할 수 있음

자바스크립트 변수 사용하기
- 변수 = 데이터를 저장할 수 있는 공간 (메모리)
변수 1개에는 값 1개만 저장할 수 있음
=> 변수에 값을 넣으면 기존 값은 사라진다

var a = 1;
var b = 1;
b = a;
a = b;

변수에 값을 저장할 수 있는 종류 (자료형 Data Type)
- 문자형 (String)
  문자나 숫자를 "/' 로 감싸고 있는 형태

- 숫자형 (Number)
  정수형 (1, 2, 3, 0, -1, ...) Integer
  실수형 (3.14, -2.7, 1/3, ...) Float
  복소수형 (1+2j, ...) Complex

  true는 1 "취급"
  false는 0 "취급"

- 논리형 (Boolean) (참과 거짓)
  참 (true), 거짓 (false)
  비교 ( 5 < 4 )

  문자형은 빈 문자가 아니면 전부 true "취급"
  빈 문자이면 false "취급"

  숫자형은 0이면 false "취급"
  0이 아닌 모든 숫자는 true "취급"
  (음수도 true 취급이다)

- null = 값이 비었다
- undefined = 값이 없다

typeof => 이 변수가 어떤 자료형을 갖느냐


변수 이름 지을 떄 유의사항
1. 의미를 갖도록
a, b, c X
pictureSlide, menuTab

2. 영문자, $, _, 숫자
한글도 가능하지만 파일을 다루면 문서가 깨질 수 있기 때문에 가급적 자제
var num1234 O
var a$2rtdjgborADG O

3. 변수 이름에서 첫 글자는 숫자, $ -> 불가능
var a$ O
var $a X
var a1 O
var 1a X

4. 예약어는 사용할 수 없음
예약어 = 자바스크립트에서 이미 사용중인 단어'
var document -> X
var var -> X
var Boolean -> X




연산자: 연산을 위한 문자들
- 산술, 문자 결합, 대입, 증감, 비교, 논리, 삼항(조건)

산술연산자
+, -, *, /, %
덧셈, 뺄셈, 곱셈, 나눗셈, 나머지
곱셈은 x가 아니라 * (별표, asterisk) 로 표현
% 나머지

C언어 / -> 정수 나눗셈, 실수 나눗셈
Python / -> 실수 나눗셈, // -> 정수 나눗셈 (몫)
JavaScript / -> 실수 나눗셈

컴퓨터가 나눗셈 연산을 할 때 -> 부동 소수점 방식
-> 오차가 발생 -> 7/3을 할 떄 2.333... 이 나오는게 아니라
2.333...5끝에 이상한 숫자가 나옴


문자 결합 연산자
+
문자 들을 결합하는 연산자

문자+문자 -> 문자
문자+숫자 -> 문자
숫자+문자 -> 문자
숫자+숫자 -> 숫자
=> 문자가 숫자보다 우선순위가 더 높다


대입 연산자
=
var str = "java";
str이라는 변수에 "java"라는 값을 대입한다


복합 대입 연산자
대입 연산자가 다른 연산자와 함께 쓰이는 경우
+=, -=, *=, /=, %=

+=은 산술연산자 +와 대입연산자 =이 함께 쓰인다
var num1 = 3;
var num2 = 2;
num1 += num2;
-> num1 = num1 + num2;
-> num1은 5가 되고, num2는 그대로 2다.

문자열은 += 복합 대입은 가능 (문자열끼리 연결)
그러나 -, *, /, % 는 안됨 (-> NaN이 발생)


증감 연산자 (증가 & 감소)
++, -- (1을 더한다, 1을 뺀다)
+=1, -=1 (<- 이것과 비슷하게 동작)
증감 연산자는 변수의 앞과 뒤에 모두 올 수 있음

a++, ++a
-> 결론적으로는 같은 +1을 동작시킴
a++은 값을 실행하고 1을 더한다
++a는 1을 더하고 값을 실행한다


비교 연산자
>, <, >=, <=, ==, !=, ===, !==

-> 비교 연산자의 결과 값은 참과 거짓 (true, false)
* true, false는 전부 소문자

== -> 얘가 정수든, 실수든, 문자든 내부에 있는 값만 같다면 참
=== -> 값만 같다고 같은게 아님. 변수의 자료형까지 같아야 함


논리 연산자
&&, ||, !
&& -> AND 그리고
|| -> OR 또는
! -> NOT 반대

논리연산자의 앞 뒤에는 반드시 논리형 (true, false)이 있어야 하며
논리연산자의 결과로 논리형이 반환됨

&& (AND)
true && true = true
true && false = false
false && true = false
false && false = false
-> 둘 다 true 일때만 true가 반환되고, 나머지는 false

|| (OR)
true || true = true
true || false = true
false || true = true
false || false = false
-> 둘 중 하나라도 true면 true, 나머지는 false

! (NOT)
!true = false
!false = true

-> NOT 수행 -> AND 수행 -> OR 수행


삼항(조건)연산자
(조건식)?(참일 떄 값):(거짓일 때 값)


연산자 우선순위
-> 여러 개의 연산자가 섞여있을 때 누가 먼저 연산되냐

1. ()
2. 단항연산자
  -- -> ++ -> !
3. 산술연산자
  * / % -> + -
4. 비교연산자
5. 이항논리연산자
  && -> ||
6. 대입연산자





document.write로 문서에 직접 출력

prompt 메소드
- 입력 창 알림을 띄워서 사용자로부터 입력을 받아서 변수에 넣는 함수
var 변수 = prompt(질의, 기본값(선택사항));
prompt로 입력받은 값은 문자열
입력을 100 -> "100" -> Number("100")

confirm 메소드
- 확인/취소 -> 확인 누르면 true, 취소를 누르면 false
var 변수 = confirm(질의)

alert 메소드
- 확인 -> 그냥 알림창을 띄워주는 함수
alert(메시지)
변수를 받아도 alert 함수는 반환 해주는 값이 없기 때문에
undefined가 나옴


[money.html]

교통비 입력
식비 입력

교통비와 식비 입력의 합이 15,000을 초과하면 
"000원 초과하였습니다"를 document.write

아니면 "건전한 경제습관을 가지고 있습니다"를 document.write

-> 삼항 조건 연산자로 만들기
삼항(조건)연산자
(조건식)?(참일 떄 값):(거짓일 때 값)