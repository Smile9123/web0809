배열 객체 Array

일반적인 변수는 값을 1개 저장
배열 객체는 여러 개의 값을 저장할 수 있다

인덱스 번호 = 배열 내에서 값의 위치를 
나타내는 수 (0부터 시작)

배열 객체를 생성할 때에는
let 변수 = new Array(값들);
[]를 이용해서도 생성할 수 있음
let 변수 = [값들];

반복문에서 배열을 확인하는 방법
- 인덱스 번호를 이용하는 방법
- 객체를 직접 확인하는 방법
  -> in 연사자를 사용

배열.length: 배열의 크기

배열 함수들
배열.join(연결문자)
-> 배열에 들어있는 값들을 연결문자를
이용해서 하나의 문자열로 연결한다

배열.reverse()
-> 배열을 뒤집는다

배열.sort()
-> 배열에 있는 데이터를 오름차순으로 정렬
유니코드 순으로 오름차순
'0' -> 48
'A' -> 65
'a' -> 97
'가' -> 44032

배열.slice(인덱스1, 인덱스2)
배열에서 인덱스1 이상부터 인덱스2
""미만""까지의 값을 가져온다 (-1)

배열.concat(다른배열)
concatenate의 줄임말
다른 배열을 배열에 추가

배열.pop()
-> 배열의 마지막 값을 삭제
배열.push(값)
-> 배열의 마지막에 값을 추가

배열.shift()
-> 배열의 첫 번째 값을 삭제
배열.unshift(값)
-> 배열의 첫 번째 값을 추가

다른함수와 엮여서 사용되는 함수
배열.every(함수)
배열.some(함수)

->안에 들어있는 함수는 ture 또는 false를 
반환해야 한다

-> every : 배열에 있는 "모든" 값들이 함수에서
true를 리턴받으면 true, 아니면 false

-> some : 배열에 있는 "아무" 값들이 함수에서
true를 리턴받으면 true, 아니면 false

배열.forEach(함수)
-> 배열에 있는 각각의 변수를 함수에
집어넣는다.

배열.map(함수)
배열.filter(함수)

-> map : 값을 함수에 넣어서 바꾸는 것
return 값이 아무것이여도 됨
-> filter : 값을 함수에 넣은 결과가 true인
것만 남겨두는 것
return 값이 true/false로 나와야 함

배열.toString()
배열.valueOf()
배열을 문자열로 바꾸어서 출력한다

[basket.hmtl]
오늘 구매할 상품 종류의 수를 입력하세요
예) 4 -> 총 4번 "아이템을 입력하세요" prompt를 반복
입력 받은 값들을 basket 이름의 배열에 저장

딸기, 수박, 참외, 메론
딸기, 메론, 수박, 참외 (정렬 해서 출력)