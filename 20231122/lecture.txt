DOM
= Document Object Model
문서 객체 모델
= HTML 객체 구조

변수 -> 데이터를 저장해놓는 곳
함수 -> 코드를 묶어서 저장해놓는 곳

기명함수
function 함수이름 (매개변수 ){
    코드
}

익명함수
let 함수변수 = function(매개변수){
    코드
};

호이스팅(Hoisting) : 함수를 호출 할 때 사용되는 방식

(기명/익명)함수를 먼저 선언한 후에 실행
-> 당연히 함수가 실행이 됨

기명 함수는 실행을 해놓고 나중(이후 코드)에 선언을
해도 실행이 됨

익명 함수는 var을 쓰든 let을 쓰든 반드시 함수
선언을 먼저 해야 실행이 됨
(기명 함수와 다르게 실행을 해놓고 나중에 코드 선언 -> X)

HTML에서 어떠한 요소를 클릭 했을 때 특정
자바스크립트 코드가 실행되도록 하는 것
-> onclick 속성

DOM에서 스타일 바꾸기
let tag = document.querySelector("~~~~");
elem.style.~~~~ = ~~~;

원래 CSS -> background-color
DOM 스타일 -> backgroundColor

DOM으로 속성 가져오기/바꾸기
let elem = document.querySelector("~~~~");
let a = elem.getAttribute("~~~");
elem.setAttribute("~~~", "~~~");

[slider.html]
img에 있는 src 값을 가져와서
_ 뒤에 있는 숫자를 따로 분리

이전버튼을 누르면, 1시간 전 사진으로 바꾸기
1 -> 12시

다음버튼을 누르면, 1시간 후 사진으로 바꾸기
12시 -> 1시

**함수는 1개만 만들어서 작성**
-> 매개변수 활용하기



객체 생성자 함수(Object Constructor Function)
- 생성자: 객체를 생성하는 함수 (new 키워드)

객체 생성을 위한 틀
function 함수이름(매개변수){
    this.속성변수 = 값;
    this.함수변수 = function() {
        코드;
    }
}

let 변수 = new 함수이름(매개변수);

객체 생성자 함수를 만들때에는 반드시 함수 이름의 첫
글자는 대문자로 -> 암묵적 룰

매개변수로 값을 넘겼다고해서 객체 생성자
함수의 멤버가 된 것이 아님
-> 반드시 this.속성변수 = 값 을 해주어야 
멤버로 등록이 됨


[studentscore.html]
학생의 정보를 입력받아서 평균 점수를 구하는 개체
생성자 함수를 만들기

<변수>
- 이름, 학년, 과목 수, 과목별 이름, 과목별 점수

<함수>
- getAverage(): 전과목의 평균을 구하는 함수
- getScore(과목이름): 과목 이름에 따른 점수를
가져오는 함수
- inputSubject(): 과목 이름을 입력하는 함수
  -> 과목 개수 (prompt) -> 과목별 이름 (prompt)
- inputScore(): 과목 점수를 입력하는 함수
  -> 과목별 성적 (prompt)
    ~~~~ 과목의 성적을 입력해주세요

실행되자마자
prompt -> 이름 입력
prompt -> 학년 입력

[성적입력] 버튼과 [성적분석] 버튼은 실행 전에는
style이 display: None -> display: block;

====
이름 (학번)

[과목입력] -> 클릭 시 inputSubject 실행
[성적입력] -> 클릭시 inputScore 실행
===

C언어 100
파이썬 90
자바 80
HTML 70
평균 85