이벤트 - 사이트에서 방문자가 취하는 모든 행위
이벤트 핸들러 - 이벤트가 발생했을 때 실행되는 코드

이벤트 종류
- 로딩 이벤트
 * 웹사이트가 로딩
 * HTML 요소가 로딩
 * 이미지나 소스가 로딩
- 마우스 이벤트
 * 클릭/더블클릭 (클릭했을 때 + 클릭 중 + 클릭뗄때)
 * 마우스를 올렸을 때 (호버)
 * 스크롤
- 포커스 이벤트 (마우스, 키보드, 탭)
 * 포커스
- 키보드 이벤트
 * 특정 키가 눌렸을 때

 이벤트 코드 작성 방법
 ex 1) 클릭 이벤트 : 요소.click(함수)
 -> 처음부터 이벤트가 발생

 ex 2) 클릭 이벤트 : 요소.on('click', 함수)
 -> 특정 시점부터 이벤트를 부여
 -> JSON 형태를 이용해서 여러 이벤트를 한 번에 부여

 ex 3) 클릭 이벤트 빼기 : 요소.off('click')



로딩 이벤트 -> 사용자가 브라우저에서 HTML 코드를 
요청한 후 값을 받아올 때
- ready(): 준비 (DOM 구조가 준비)
- load(): 로딩완료 (요소가 모두 준비)



마우스 이벤트
- click(): 클릭했을 때
- dbclick(): 더블클릭 했을 때
- mouseover(): 특정 요소에 마우스를 올릴 때 
- mouseout(): 특정 요소에 마우스가 벗어날 때 
- hover(): 올릴 때 + 벗어날 때
- mouseenter(): 경계에 마우스 포인터가 들어갈 때
- mouseleave(): 경계에 마우스 포인터가 벗어날 때
- scroll(): 스크롤 할 때

마우스 이벤트에서 마우스 포인터 등의 위치
-> 이벤트 객체: 이벤트가 실행되었을 때 발생하는 객체

마우스 이벤트의 객체
* clientX, clientY -> 현재 창 기준
* pageX, pageY -> 현재 창, absolute left 0 top 0 기준
* screenX, screenY -> 모니터 기준
* layerX, layerY -> 특정 요소 기준 
* button -> 어떤 마우스 (좌 0, 우 2, 스 1)
1)
-> 이벤트 함수에 e(event) 매개변수를 
넣어서 가져올 수 있음
function(e) {

}


포커스 이벤트
- focus(): 포커스가 되었을 때
- blur(): 포커스에서 풀려놨을 때
-> 버블링 X

#userid1, #userpw1에 대해서 포커스를 
받으면 배경색이 beige색으로 변하기
포커스에서 풀려나면 배경색 white로 변하기

- focusin()
- focusout()
-> 버블링 O

이벤트 버블링
- 이벤트가 발생한 요소에 대해서 이벤트가
부모로 거슬러 올라가서 이벤트가 퍼진다
- 거의 대부분의 이벤트는 모두 이벤트 버블링이 됨
- event.stopPropagation() -> 그 단계까지만
이벤트 버블링이 실행되고 그 이후에는 버블링이
멈춘다



키보드 이벤트
keydown() -> 키보드의 어떤 키든 눌렀을 때
keyup() -> 키보드를 땔 때
keypress() -> 키보드를 눌렀을 때 (기능키를
제외한 모든 키: F1~F12, Prt, Scr, Lock, Tab)

키보드 이벤트 객체 function(e)
e.keyCode -> 키보드의 아스키 코드
-> '0' 48
-> 'A' 65
-> 'a' 97

왼쪽 위 오른쪽 아래
37  38  39    40

현재 좌표 가져오는 코드

상하좌우 -> 그 방향으로 1픽셀씩 이동
R 을 누르면 랜덤 색상(background-color)으로
변하도록

그룹 이벤트 등록
-> 한 번에 2개 이상의 이벤트를 등록

HTML코드가 로딩이 완료된 후에 그 후에 새롭게
생성된 객체에 대해서도 이미 등록한 이벤트가
적용이 되도록
-> 라이브 이벤트 등록

기존 이벤트 등록: 요소.on(이벤트, 함수)
라이브 이벤트 등록: document.on(이벤트, 요소, 함수)

delegate 함수: 선택한 요소의 하위 요소에
대해서 이벤트를 등록 -> 이벤트가 등록된 시점
+ 시점 이후에 생성된 요소에 대해서도 이벤트가
적용된다(동적 이벤트 등록/생성)

on  함수와 delegate 함수는 매개변수의 순서가 다름

one 함수: 일회성 이벤트 함수
이벤트가 1회 실행되고 삭제 (동적 이벤트로도 가능)






자바스크립트 애니메이션
효과
toggle() -> hide() & show()
fadeToggle() -> fadeIn() & fadeOut()
slideToggle() -> slideUp() & slideDown()
fadeTo() -> 지정 투명도로 변경한다

요소.메소드(소요시간, 가속도, 함수)
소요시간: ms 단위 (1000, 500) or 키워드
(slow, normal, fast)
가속도: swing (느->빠->느), linear(일정속도)
콜백함수: 효과가 종료된 후에 실행되는 함수



애니메이션
선택한 요소에 대해서 모션 효과를 부여(css 효과)

요소.animate({css}, 시간, 가속도. 콜백함수)



애니메이션 대기열 (큐)
-> 애니메이션은 기본적으로 한 번에 하나씩만 실행이
가능
-> 다른 애니메이션이 실행 중일 때 대기열에 넣어놓고 들어온
순서대로 하나씩 빼서 실행

애니메이션 효과 제어 메소드
stop(): 현재 실행중인 모든 애니메이션 효과를 중지
-> 현재 실행 중인 것만 -> 대기열에 있는 것은 정지 X
stop(true, true) -> 애니메이션의 종료지점으로 한 번에 이동
delay(시간) -> 지정 시간만큼 지연시킨 후에 애니메이션을 실행

애니메이션 대기열 제어 메소드
queue() -> 큐의 내용을 가져오고 큐의 내용을 삭제
dequeue() -> queue() 함수가 실행된 후에 애니메이션이 취소되지
않도록 설정
clearqueue() -> 큐를 비운다 -> 현재 실행중인 애니메이션을
제외하고 모든 애니메이션을 삭제





Ajax (Asynchronous Javascript And XML)
Asynchronous -> async (비동기)
-> 동기화 되지 않는다
ajax: 서버와 HTML(JS)가 서로 통신할 때

url (웹사이트 주소)
type (어떤 방식으로 웹사이트와 통신할 것인가)
  - get (서버에서 데이터 가져오는 것)
  - post (서버로 데이터를 보내는 것)
data (post에서 보낼 데이터)
dataType (요청할 데이터의 형식, json, xml, html, text)
success (데이터를 가져오거나 보내는데에 성공할 때 실행되는
콜백함수 function(data))
error (에러가 났을 때 실행되는 콜백함수 function(e)(e = error))

오픈 API
https://random.dog/woof.json -> 강아지 사진
https://quotation-api-cdn.dunamu.com/v1/forex/recent?codes=FRX.KRWUSD
https://flagsapi.com/US/flat/64.png