제어문
-프로그램의 흐름을 제어할 수 있는 문장

조건문 : 조건에 따라서 특정 코드를 실행
선택문 : 값에 따라서 값이 있으면 선택해서 실행
반복문 : 코드를 특정횟수 또는 특정 조건동안 반복

조건문 - 조건식이 참인지 거짓인지에 따라 제어
if문 : 조건을 만족함녀 if문 내부에 있는 코드를 실행

if (조건식) {
    코드
}

esle문 : if문 안에 있는 조건식이 거짓일 경우에 실행되는 구문

if(조건식) {
    조건식이 참일 때 실행되는 구문
}
else {
    조건식이 거짓일 때 실행되는 구문
}

-> else는 단독으로 올 수 없음

3으로 나눈 나머지는 0, 1, 2로 3개
if(num % 3 == 0) {

}
else{ // 1, 2
    if(num % 3 == 1) { //1

    }
    else { //2

    }
}

--> 코드가 너무 길어진다

else if 를 사용해서 코드가 길어지는것을 방지

if(num % 3 == 0) {

}
else if(num % 3 == 1) {

}
else{

}

[season.html]
prompt를 이용해서 월을 입력받음
3~5 -> 봄 -> pink
6~8 -> 여름 -> green
9~11 -> 가을 -> orange
12, 1~2 -> 겨울 -> blue
그외 -> 오류! -> red 

[login.html]
아이디를 : sbs1113
비밀번호 : 12341234

prompt로 아이디 입력받음
prompt로 비밀번호 입력받음

id가 맞고 pw도 맞으면 -> id님 반갑습니다.
id가 맞는데 pw가 틀리면 -> 비밀번호가 일치하지 않습니다.
id가 맞지 않으면 -> 존재하지 않는 id입니다.


선택문 : switch+case문
switch문에 있는 변수를 보고
case문에서 검사

switch(변수){
    case 값:
        코드
        break;
     case 값:
        코드
        break;
     case 값:
        코드
        break;
     case 값:
        코드
        break;
}

** switch-case 문은 break가 나올 떄 까지 코드를 실행함

[season2.html]
season.html를 if 조건문 대신에 switch-case 선택문으로 만들어보기
-> 색깔 변수와 계절이름 변수 2개 추가해서 작성

switch 변수에 대해서 여러 값이 같은 결과가 나오도록 하려면 

case A:
case B:
case C: 처럼 case 여러 개를 붙여서 작성하면 된다

구글 -> google.com
네이버 -> naver.com
학원 -> sbsart.com

반복문 -> 코드를 원하는 횟수 또는 조건이 만족할 동안 반복해서 실행하는 구문

while 문, do-while 문, for 문

반복문에서 반복을 위한 변수를 정할 때에는 i, j, k

while문 : 조건식을 만종할 동안 계속 실행되는 구문 
    while(조건식){
        코드
    }

do-while문 : 조건식ㅇ 만족할 동안 계속 실행되는 구문

do {

} while(조건식)

while vs do-while 
- while문은 첫 while과 조건식을 작성
- do-while문은 첫줄에 do, 마지막 줄에 while과 조건식 그리고 세미클론을 작성

- while문은 조건이 만족하지 않으면 아예 내부 코드가 실행되지 않음
- do-while문은 while에 있는 조건이 만족하지 않더라도 코드가 적어도 한 번 실행되고나서
그 다음에 조건을 확인

for문
for(초기식; 조건식; 변화식){
    코드
}

시작 -> 초기식 -> 조건식(참) -> 코드실행 -> 변화식 -> 조건식 -> 코드실행...
                       (거짓) -> 종료

반복문을 제어하는 코드
break, continue

break -> 부수다 
반복문의 조건식에 관계 없이 무조건 "가장 최근에 들어온 1개" 반복문을 강제로 나간다.

while(){
    for(){
        while(){ -> 이거만 나감
            break;
        }
        //여기로 이동
    }
}

continue -> 계속하다
continue 이후의 코드를 무시하고 다시
반복문으로 돌아간다

for(){
    코드1
    continue
    코드2
}

-> 코드1 실행 -> while문의 조건식

중첩 반목문 
for 안에 for문
while 안에 for문
while 안에 while문 

4행 3열짜리 표를 만들고자 함
ㅁㅁㅁ
ㅁㅁㅁ
ㅁㅁㅁ
ㅁㅁㅁ

바깥쪽 for문이 행을 만들고
안쪽 for문이 열을 만든다